/*
Exercise 3.10
Напишите нерекурсивную версию функции comma, использующую bytes.Buffer вместо конкатенации строк.

*/

package main

import (
	"bytes"
)

func main() {

}

// comma разбивает строку символом ',' каждые 3 символа строки
func comma(s string) string {
	// Используем указатель на буфер, чтобы не пересоздавать его, в случае нескольких вызовов
	b := &bytes.Buffer{}
	// Определяем сколько символов должно быть в первой группе
	n := len(s) % 3
	// Если s == 0, указываем, что в группе должно быть 3 символа
	if n == 0 {
		n = 3
	}
	// Записываем первую группу
	b.WriteString(s[:n])
	// В цикле расставляем запятую, перед каждым 3-м символом и добавляем в буфер символы
	for i := n; i < len(s); i += 3 {
		b.WriteByte(',')
		b.WriteString(s[i : i+3])
	}

	return b.String()
}
